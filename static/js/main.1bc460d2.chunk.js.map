{"version":3,"sources":["components/BarChart.jsx","components/Posts.jsx","App.js","queries/queryPosts.js","index.js"],"names":["BarChart","posts","d3Chart","useRef","useEffect","DrawChart","margin","data","chartheight","svg","d3","current","attr","x","domain","length","range","padding","append","call","tickFormat","i","month","tickSizeOuter","max","d","totalPosts","y","selectAll","join","bandwidth","style","maxWidth","maxHeight","ref","Posts","useState","setData","temp","map","post","toDate","Date","parseInt","createdAt","createdYear","getFullYear","createdMonth","getMonth","App","setPosts","request","then","allPosts","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNA0EeA,EAvEE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACZC,EAAUC,mBAGhBC,qBAAU,WACRC,EAAUJ,KACT,IAEH,IAAMK,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GAEjDD,EAAY,SAACE,GACjB,IACMC,EAAc,MAEdC,EAAMC,IACFR,EAAQS,SACfC,KAAK,QALW,MAKWN,EAAcA,GACzCM,KAAK,SAAUJ,EAAcF,EAAaA,GAGvCO,EAAIH,MAEPI,OAAOJ,IAASH,EAAKQ,SACrBC,MAAM,CAACV,EAZS,MAYiBA,IACjCW,QAAQ,IAEXR,EACGS,OAAO,KACPN,KAAK,YAAa,oBAClBO,KACCT,IACcG,GACXO,YAAW,SAACC,GAAD,OAAOd,EAAKc,GAAGC,SAC1BC,cAAc,IAGrB,IAAMC,EAAMd,IAAOH,GAAM,SAAUkB,GACjC,OAAOA,EAAEC,cAILC,EAAIjB,MAEPI,OAAO,CAAC,EAAGU,IACXR,MAAM,CAACR,EAAaF,IAEvBG,EACGS,OAAO,KACPN,KAAK,YAAa,aAAeN,EAAc,OAC/Ca,KAAKT,IAAYiB,IAGpBlB,EACGS,OAAO,KACPN,KAAK,OAAQ,WACbgB,UAAU,QACVrB,KAAKA,GACLsB,KAAK,QACLjB,KAAK,KAAK,SAACa,EAAGJ,GAAJ,OAAUR,EAAEQ,MACtBT,KAAK,KAAK,SAACa,GAAD,OAAOE,EAAEF,EAAEC,eACrBd,KAAK,UAAU,SAACa,GAAD,OAAOE,EAAE,GAAKA,EAAEF,EAAEC,eACjCd,KAAK,QAASC,EAAEiB,cAGrB,OACE,qBAAKC,MAAO,CAAEzB,OAAQ,UAAtB,SACE,qBAAKyB,MAAO,CAAEC,SAAU,OAAQC,UAAW,QAAUC,IAAKhC,OC/BjDiC,EAnCD,SAAC,GAAe,IAAblC,EAAY,EAAZA,MACf,EAAwBmC,mBAAS,MAAjC,mBAAO7B,EAAP,KAAa8B,EAAb,KA+BA,OA7BAjC,qBAAU,WACR,IAAMkC,EAAO,CACX,CAAEhB,MAAO,UAAWI,WAAY,GAChC,CAAEJ,MAAO,WAAYI,WAAY,GACjC,CAAEJ,MAAO,QAASI,WAAY,GAC9B,CAAEJ,MAAO,QAASI,WAAY,GAC9B,CAAEJ,MAAO,MAAOI,WAAY,GAC5B,CAAEJ,MAAO,OAAQI,WAAY,GAC7B,CAAEJ,MAAO,OAAQI,WAAY,GAC7B,CAAEJ,MAAO,SAAUI,WAAY,GAC/B,CAAEJ,MAAO,YAAaI,WAAY,GAClC,CAAEJ,MAAO,UAAWI,WAAY,GAChC,CAAEJ,MAAO,WAAYI,WAAY,GACjC,CAAEJ,MAAO,WAAYI,WAAY,IAGnCzB,EAAMsC,KAAI,SAACC,GACT,IAAMC,EAAS,IAAIC,KAAKC,SAASH,EAAKI,YAEhCC,EAAcJ,EAAOK,cACrBC,EAAeN,EAAOO,WAER,OAAhBH,IACFP,EAAKS,GAAcrB,YAAc,MAGrCW,EAAQC,KACP,IAEI,8BAAM/B,EAAM,cAAC,EAAD,CAAUN,MAAOM,IAAS,MCjBhC0C,EAZH,WACV,MAA0Bb,mBAAS,MAAnC,mBAAOnC,EAAP,KAAciD,EAAd,KAQA,OANA9C,qBAAU,WACR+C,kBAAQ,uCCVD,2TDUgDC,MAAK,SAAC7C,GAAD,OAC1D2C,EAAS3C,EAAK8C,eAEf,IAEI,qBAAKC,UAAU,MAAf,SAAsBrD,EAAQ,cAAC,EAAD,CAAOA,MAAOA,IAAY,MEXjEsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1bc460d2.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst BarChart = ({ posts }) => {\r\n  const d3Chart = useRef();\r\n  \r\n\r\n  useEffect(() => {\r\n    DrawChart(posts);\r\n  }, []);\r\n\r\n  const margin = { top: 50, right: 30, bottom: 30, left: 60 };\r\n\r\n  const DrawChart = (data) => {\r\n    const chartwidth = \"900\";\r\n    const chartheight = \"500\";\r\n\r\n    const svg = d3\r\n      .select(d3Chart.current)\r\n      .attr(\"width\", chartwidth + margin.left + margin.right)\r\n      .attr(\"height\", chartheight + margin.top + margin.bottom);\r\n\r\n    // x scale\r\n    const x = d3\r\n      .scaleBand()\r\n      .domain(d3.range(data.length))\r\n      .range([margin.left, chartwidth - margin.right])\r\n      .padding(0.1);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + chartheight + \")\")\r\n      .call(\r\n        d3\r\n          .axisBottom(x)\r\n          .tickFormat((i) => data[i].month)\r\n          .tickSizeOuter(0)\r\n      );\r\n\r\n    const max = d3.max(data, function (d) {\r\n      return d.totalPosts;\r\n    });\r\n\r\n    // y scale\r\n    const y = d3\r\n      .scaleLinear()\r\n      .domain([0, max])\r\n      .range([chartheight, margin.top]);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",0)\")\r\n      .call(d3.axisLeft(y));\r\n\r\n    // Draw bars\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"fill\", \"#65f0eb\")\r\n      .selectAll(\"rect\")\r\n      .data(data)\r\n      .join(\"rect\")\r\n      .attr(\"x\", (d, i) => x(i))\r\n      .attr(\"y\", (d) => y(d.totalPosts))\r\n      .attr(\"height\", (d) => y(0) - y(d.totalPosts))\r\n      .attr(\"width\", x.bandwidth());\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"0 auto\" }}>\r\n      <svg style={{ maxWidth: \"90vw\", maxHeight: \"90vh\" }} ref={d3Chart}></svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport BarChart from \"./BarChart\";\r\n\r\nconst Posts = ({ posts }) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const temp = [\r\n      { month: \"January\", totalPosts: 0 },\r\n      { month: \"February\", totalPosts: 0 },\r\n      { month: \"March\", totalPosts: 0 },\r\n      { month: \"April\", totalPosts: 0 },\r\n      { month: \"May\", totalPosts: 0 },\r\n      { month: \"June\", totalPosts: 0 },\r\n      { month: \"July\", totalPosts: 0 },\r\n      { month: \"August\", totalPosts: 0 },\r\n      { month: \"September\", totalPosts: 0 },\r\n      { month: \"October\", totalPosts: 0 },\r\n      { month: \"November\", totalPosts: 0 },\r\n      { month: \"December\", totalPosts: 0 },\r\n    ];\r\n\r\n    posts.map((post) => {\r\n      const toDate = new Date(parseInt(post.createdAt));\r\n\r\n      const createdYear = toDate.getFullYear();\r\n      const createdMonth = toDate.getMonth();\r\n\r\n      if (createdYear === 2019) {\r\n        temp[createdMonth].totalPosts += 1;\r\n      }\r\n    });\r\n    setData(temp);\r\n  }, []);\r\n\r\n  return <div>{data? <BarChart posts={data}/>: ''}</div>;\r\n};\r\n\r\nexport default Posts;\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { query } from \"./queries/queryPosts\";\r\nimport { request } from \"graphql-request\";\r\nimport Posts from \"./components/Posts\";\r\n\r\nconst App = () => {\r\n  const [posts, setPosts] = useState(null);\r\n\r\n  useEffect(() => {\r\n    request(\"https://fakerql.goosfraba.ro/graphql\", query).then((data) =>\r\n      setPosts(data.allPosts)\r\n    );\r\n  }, []);\r\n\r\n  return <div className=\"App\">{posts ? <Posts posts={posts} /> : \"\"}</div>;\r\n};\r\n\r\nexport default App;\r\n","const query = `{\r\n    allPosts(count:100) {\r\n                id\r\n                title\r\n                body\r\n                published\r\n                createdAt\r\n                author {\r\n                  id\r\n                  firstName\r\n                  lastName\r\n                  avatar\r\n            }\r\n      }  \r\n    }`;\r\n\r\nexport {query};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}